= form_for @match do |f|
  - if @match.errors.any?
    #error_explanation
      %h2= "#{pluralize(@match.errors.count, "error")} prohibited this match from being saved:"
      %ul
        - @match.errors.full_messages.each do |msg|
          %li= msg

  .field
    = f.label :opponent
    = f.text_field :opponent
  .field
    = f.label :time
    = f.text_field :time, value: I18n.l(f.object.time || Time.now, format: "%Y-%m-%d %H:%M")

  :javascript
    $("#match_time").datetimepicker({
      timeFormat: 'HH:mm',
      dateFormat: 'yy-mm-dd'
    });

  .field
    = f.label :location
    = f.text_field :location
  .field
    = f.label :tournament
    = f.text_field :tournament
  .field
    = f.label :our_first_hammer
    = f.check_box :our_first_hammer
  .field
    = f.label :bambuser_id
    = f.text_field :bambuser_id
  - %w(our their).each do |team|
    %strong= t("." + team + "_lineup")
    %table
      %tr
        %td
        %td
        %td
          = f.label (team + "_skip").to_sym
          %br/
          = f.radio_button (team + "_skip").to_sym, nil
        %td
          = f.label (team + "_viceskip").to_sym
          %br/
          = f.radio_button (team + "_viceskip").to_sym, nil
      - %w(lead second third fourth alternate).each_with_index do |position, i|
        %tr
          - fld = (team + "_" + position).to_sym
          %td= f.label fld
          %td= f.text_field fld
          %td= f.radio_button (team + "_skip").to_sym, i + 1
          %td= f.radio_button (team + "_viceskip").to_sym, i + 1

  .field
    %strong= t(".result")
    %table
      %tr
        %th= t(".end_number")
        %th= t(".our_score")
        %th= t(".their_score")
        %th= t(".xed")
      - @position = 0
      = f.fields_for :ends do |builder|
        = render 'ends_fields', :f => builder

  .actions
    = f.submit t("save")
