%h1= t(".show_match")


%p#notice= notice


.matchbox
  %p
    = link_to t(:edit), edit_match_path(@match)
    \|
    = link_to t(:back), matches_path
  %p
    %em
      = [@match.tournament, @match.location, @match.time ? l(@match.time, :format => :long) : nil].delete_if(&:blank?).join(", ")
    %h2
      Vs.
      = @match.opponent


  %table.lineup
    %caption= t(".lineups")
    %tr
      %th= t(".pos")
      %th= t(".us")
      %th= @match.opponent
    - %w(lead second third fourth alternate).each_with_index do |pos,i|
      %tr
        %td= t("." + pos)
        %td
          = @match.send("our_" + pos)
          = "(S)" if @match.our_skip == (i+1)
          = "(V)" if @match.our_viceskip == (i+1)
        %td
          = @match.send("their_" + pos)
          = "(S)" if @match.their_skip == (i+1)
          = "(V)" if @match.their_viceskip == (i+1)


  - if @match.ends.any?
    %table.scorecard
      %caption= t(".results")
      %colgroup
        %col{:span => 2}
      %colgroup
        %col{:span => @match.ends.size}
      %colgroup#sum
        %col

      %tr
        %th
        %th
        - (1..(@match.ends.size)).to_a.each do |s|
          %th= link_to "#{End.model_name.human} #{s}", match_end_path(@match, @match.ends.at(s-1))
        %th Sum
      - @match.scorecard.each do |line|
        %tr
          %td.team= cycle(t(".us"), @match.opponent)
          %td.hammer= "âš’" if line.shift
          - line.each do |cell|
            %td.scorecell= cell
  - else
    %p 
      = t(".no_results_yet")
      = link_to t(".add_results"), edit_match_path(@match)
